/* Mixins, keyframes, etc. */

/* Colors */
$sb: rgb(170, 185, 238); /*section base*/
$m: white; /*mix*/
$mf: 40; /*mix factor*/
$mfs: 30; /*mix factor step*/

/* For portfolio page colors */
$psb: rgb(76, 175, 80); /*section base*/
$pm: white; /*mix*/
$pmf: 40; /*mix factor*/
$pmfs: 10; /*mix factor step*/


$colors: (
  'white': #ffffff,
  'black': #000000,
  'shade-lightest': #ffffff,
  'shade-lighter': #ededed,
	'shade-darker': #404040,
  'shade-darkest': #000000,
  'link': blue,
	'text-darkest': #000000,
	'text-darker': #8c8c8c,
  'text-lighter': #c2c2c2,
  'text-lightest': #ffffff,
	'javascript': #f7df1e,
	'css': #1572b6,
	'html': #e34c26,
	'php': #8892be,
	'python': #ffde57,
  'python-secondary': #4584b6,
  'github': #6cc644,
  'ras-pi': #c7053d,
  'linkedin': #0077b5,
  'section-1': mix($sb, $m, $mf),
  'section-2': mix($sb, $m, $mf + $mfs),
  'section-3': mix($sb, $m, $mf + 2*$mfs),
  'portfolio-section-1': mix($psb, $pm, $pmf),
  'portfolio-section-2': mix($psb, $pm, $pmf + $pmfs),
  'portfolio-section-3': mix($psb, $pm, $pmf + 2*$pmfs),
  'portfolio-section-4': mix($psb, $pm, $pmf + 3*$pmfs),
);

@function accent($color-name) {
  @return darken(desaturate(map-get($colors, $color-name), 11), 21);
}

$temp: (
  'section-1-accent': accent(section-1),
  'section-2-accent': accent(section-2),
  'section-3-accent': accent(section-3),
);

$colors: map-merge($colors, $temp);

$opacity: (
  'full': 1,
  'thick': 0.8, // opacity used with lighter colors
  'medium': 0.5,
  'thin': 0.3,   // opacity used with darker colors
  'very-thin': 0.1,
  'trans': 0,
  // ... etc.
);

$breakpoints: (
  'xs': 320px,
  's': 480px,
  'ms': 768px,
  'm': 1000px,
  'ml': 1224px,
  'l': 1824px,
);

@function bk($name) {
  @return map-get($breakpoints, $name);
}

@function color-alpha($name: 'primary', $o: 0) {
  $color: color($name);

  // Get the named opacity level, if it exists
  @if map-key-exists($opacity, $o) {
    $o: map-get($opacity, $o);
  }

  // Use rgba() to manipulate the color's alpha level
  @return rgba($color, $o);
}

@function color($key: 'primary') {
  @return map-get($colors, $key);
}

// @mixin background-image ($url) {
// 	background-image: url($url);
// 	background-repeat: no-repeat;
// 	background-size: cover;
// }

/* Other mixins */

@mixin portfolio-tile ($class, $color, $image) {
  &.#{($class)} {
    background-image: url("../resources/img/#{($image)}");
    .overlay {
      background-color: color-alpha($color, thin);
    }
    &:hover .overlay{
      background-color: color-alpha($color, full);
    }
    a.repo-link:hover {
      color: color($color);
    }
  }
}

@mixin portfolio-section ($name, $color) {
  section.#{($name)} {
    background-color: color($color);
    div.portfolio-screenshot.first {
      background-image: url("../resources/img/#{($name)}_screenshot_1.png");
    }
    div.portfolio-screenshot.second {
      background-image: url("../resources/img/#{($name)}_screenshot_2.png")
    }
    div.portfolio-screenshot.third {
      background-image: url("../resources/img/#{($name)}_screenshot_3.png")
    }
  }
}

@mixin animate (
  $name: none,
  $duration: 0s,
  $timing-function: linear,
  $delay: 0s,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: forwards,
  $play-state: running) {
    animation-name: $name;
    animation-duration: $duration;
    animation-timing-function: $timing-function;
    animation-delay: $delay;
    animation-iteration-count: $iteration-count;
    animation-direction: $direction;
    animation-fill-mode: $fill-mode;
    animation-play-state: $play-state;
  }

@mixin letter-spacing($val) {
  letter-spacing: $val;
  text-indent: $val;
}

/* Keyframes */

@keyframes fadeIn {
	0% { opacity: 0 }
	100% { opacity: 1 }
}

@keyframes rotateWord {
	0% { opacity: 0; transform: translateY(100%) }
  1.5% { opacity: 0 }
	5% { opacity: 1; transform: translateY(0%) }
	21% { opacity: 1; transform: translateY(0%) }
	24% { opacity: 0 }
	26% { opacity: 0; transform: translateY(-100%) }
	100% {opacity: 0 }
}

@keyframes rotateWordH {
	0% { opacity: 0; transform: translateX(100%) }
	5% { opacity: 1; transform: translateX(0%) }
	21% { opacity: 1; transform: translateX(0%) }
	24% { opacity: 0 }
	26% { opacity: 0; transform: translateX(-100%) }
	100% {opacity: 0 }
}

$bounce-for: 0.8;
$every: 10;
$per: ($bounce-for/$every)*100;
$x: $per/2;
$displace: 1rem;

@keyframes bounce {
	0% { margin-bottom: 0 }
	#{($x*0.5)}% { margin-bottom: -$displace }
	#{($x*1)}% { margin-bottom: 0 }
	#{($x*1.5)}% { margin-bottom: -$displace }
	#{($per)}% { margin-bottom: 0 }
	100% { margin-bottom: 0 }
}

$s: 0.5;
$t: 2.5;
$d: 3.5;
$step: $t/10;


@keyframes slide-left {
  0% { margin-left: 0 } //0
  10% { margin-left: #{(($d/pow($t,$s))*pow(($step*1), $s))}rem } //1
  20% { margin-left: #{(($d/pow($t,$s))*pow(($step*2), $s))}rem } //1
  30% { margin-left: #{(($d/pow($t,$s))*pow(($step*3), $s))}rem } //1
  40% { margin-left: #{(($d/pow($t,$s))*pow(($step*4), $s))}rem } //1
  50% { margin-left: #{(($d/pow($t,$s))*pow(($step*5), $s))}rem } //1
  60% { margin-left: #{(($d/pow($t,$s))*pow(($step*6), $s))}rem } //1
  70% { margin-left: #{(($d/pow($t,$s))*pow(($step*7), $s))}rem } //1
  80% { margin-left: #{(($d/pow($t,$s))*pow(($step*8), $s))}rem } //1
  90% { margin-left: #{(($d/pow($t,$s))*pow(($step*9), $s))}rem } //1
  100% { margin-left: #{($d)}rem } //3
}
