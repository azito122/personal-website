$col1-fs: 5rem;
$col2-fs: 4.3rem;

.screen {
	position: relative;
	height: 100%; // based on body and html having height 100%
	background: linear-gradient(mix(color(section-1), white, 40), white);

	.section-sep {
		position: absolute;
		width: 100%;
		height: auto; // override parallax section-seps
		top: 40rem;
		bottom: 0;
		background-image: url("../resources/img/forest.svg");
		background-size: contain; // override parallax section-seps
		background-attachment: scroll; // override parallax section-seps
		@include animate ($name: fadeIn, $duration: 4s)

		i {
			display: block;
			width: 10rem;
			margin: auto;
			margin-top: -3rem;
			text-align: center;
			font-size: 10rem;
			line-height: 1rem;
			color: color(text-lighter);
			transition: margin-top 0.3s;
			cursor: pointer;
			@include animate (
				$name: bounce,
				$duration: 10s,
				$delay: 5s,
				$iteration-count: infinite);

			&:hover {
				margin-top: -2rem;
			}
		}
	}
}

header {
	display: block;
	padding-top: 3rem;

	// @media (max-width: 1100px) {
	// 	div.column-second {
	// 		display: none;
	// 	}
	//
	// 	div.wrapper-table div.column-first {
	// 		text-align: center !important;
	// 		width: 100% !important;
	// 	}
	// }

	/* Follow hover-text */
	span.follow-text {
		position: absolute;
		top: 0;
		left: 2rem;
		height: 100%;
		color: color(shade-darkest);
		line-height: 9.3rem;
		z-index: 1000;
		opacity: 0;
		transition: opacity 0s;
	}

	div.wrapper-table {
		font-size: 0; /* to fix weird white space between inline-block children */

		/* Follow links (row-spanning links, click to go to relevant section)*/
		a.follow {
			width: 100%;
			display: inline-block;

			&:hover { //bg on hover
				background-color: color-alpha(shade-lightest, thick);

				span.main { //and hide standard text of second column
					opacity: 0;

					span { // make sure one of the rotating word lists is hidden
						opacity: 0 !important;
					}
				}

				span.follow-text { //text to indicate where clicking the link takes you
					opacity: 1;
					transition: opacity 0.5s;
					@include animate($name: slide-left, $duration: 3s, $delay: 100ms);
				}
			}
		}

		/* Word/phrase rotation lists */

		div.column-second ul {
			display: inline-block;

			li {
				position: absolute;
				bottom: -0.6rem;
				font-size: $col2-fs;
				line-height: $col2-fs;
				opacity: 0;
			}
		}

		/* Main content */

		div { // All cells
			position: relative;
			padding: 2rem;
			text-transform: uppercase;
			opacity: 0;

			&.column-first {
				float: left;
				clear: left;
				width: 45%;
				color: color(text-darkest);
				font-size: $col1-fs;
				font-family: 'Questrial', sans-serif;
				text-align: right;
				letter-spacing: 1.3rem;
			}

			&.column-second {
				float: right;
				clear: right;
				width: 55%;
				color: color(text-lighter);
				font-size: $col2-fs;
				line-height: $col1-fs;
				font-family: 'Questrial', sans-serif;
				text-align: left;

				span.main { // Main content within a cell
					transition: opacity 0.3s;
				}
			}

			&.row-third.column-second ul { // Special for the multiline rotating text
				display: table;
				width: 100%;

				li {
					display: table;
					top: 0.7rem;
					font-size: 2rem;
					line-height: 2rem;

					span {
						display: table-cell;
						height: 4rem;
						vertical-align: middle;
						transition: opacity 0.5s;
					}
				}
			}
		}
	}
}

/* Animations */

header div.wrapper-table {

		// Animation vals
		$base1: 300ms; // base delay for appearance animation
		$d1: 1s; // duration of fade in for col1 text
		$d2: 0.2s; // duration of fade in for col2 text
		$g1: -0.3s; // time between end of col1 text fade in and beginning of col2 fade in
		$g2: 1s; // time between end of col2 fade in and beginning of next col1 fade in

		$base2: $base1 + $d1 + $g1 + $d2 + $g2 + $d1 + $g1 - 1.5s; // base delay for rotation animation
		$per: 3s; // how long each rotated text should be visible

		// Base animation properties for fading in (now mostly taken care of by animate mixin defaults)
		div {
			@include animate ($name: fadeIn)
		}

		// Rotating list animation
		div.column-second ul {
			li {
				@include animate (
					$name: rotateWord,
					$duration: $per*5,
					$delay: $base2,
					$iteration-count: infinite);
			}

			li:nth-child(1) {
				color: color(javascript);
			}
			li:nth-child(2) {
				animation-delay: $base2+$per*1;
				color: color(php);
			}
			li:nth-child(3) {
				animation-delay: $base2+$per*2;
				color: color(python);
			}
			li:nth-child(4) {
				animation-delay: $base2+$per*3;
				color: color(html);
			}
			li:nth-child(5) {
				animation-delay: $base2+$per*4;
				color: color(css);
			}
		}

		div.row-third.column-second ul li {
			color: inherit;
		}

		// Fade in animation
		div {
			&.column-second {
				animation-duration: $d2;
			}

			&.column-first {
				animation-duration: $d1;
			}

			&.row-first.column-first {
				animation-delay: $base1 + ($d1 * 0) + ($g1 * 0) + ($d2 * 0) + ($g2 * 0);
			}
			&.row-first.column-second {
				animation-delay: $base1 + ($d1 * 1) + ($g1 * 1) + ($d2 * 0) + ($g2 * 0);
			}
			&.row-second.column-first {
				animation-delay: $base1 + ($d1 * 1) + ($g1 * 1) + ($d2 * 1) + ($g2 * 1);
			}
			&.row-second.column-second {
				animation-delay: $base1 + ($d1 * 2) + ($g1 * 2) + ($d2 * 1) + ($g2 * 1);
			}
			&.row-third.column-first {
				animation-delay: $base1 + ($d1 * 2) + ($g1 * 2) + ($d2 * 2) + ($g2 * 2);
			}
			&.row-third.column-second {
				animation-delay: $base1 + ($d1 * 3) + ($g1 * 3) + ($d2 * 2) + ($g2 * 2);
			}
		}
	}
